package com.infotel.controller;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.infotel.dto.OrganismeDTO;
import com.infotel.entity.Organisme;
import com.infotel.service.OrganismeService;

@CrossOrigin(origins = "http://localhost:4200")
@RestController
@RequestMapping("/api/infotel/organisme")
public class DataGetOrganismeController {
	
	private final Logger log = LoggerFactory.getLogger(DataCreateController.class);
	private final OrganismeService orgService;
	
	public DataGetOrganismeController(OrganismeService orgService) {
		this.orgService=orgService;
	}
	
	@GetMapping("/ByNom={nom}")
	public ResponseEntity<?> getByNom(@PathVariable("nom") String nom){
		HttpHeaders headers = new HttpHeaders();
		//headers.add("Access-Control-Allow-Origin", "*");
		headers.add("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT");
		headers.add("Access-Control-Allow-Headers", "X-Requested-With,content-type");
		headers.add("Access-Control-Allow-Credentials", "true");
		Organisme organisme = orgService.getByNom(nom);
		return new ResponseEntity<>(organisme.toDTO(),headers,HttpStatus.OK);
	}
	
	@GetMapping("/ByDispositif={nom}")
	public ResponseEntity<?> getByDispositif(@PathVariable("nom") String nom){
		HttpHeaders headers = new HttpHeaders();
		//headers.add("Access-Control-Allow-Origin", "*");
		headers.add("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT");
		headers.add("Access-Control-Allow-Headers", "X-Requested-With,content-type");
		headers.add("Access-Control-Allow-Credentials", "true");
		Organisme organisme = orgService.getByNom(nom);
		return new ResponseEntity<>(organisme.toDTO(),headers,HttpStatus.OK);
	}
	
	@GetMapping("/ByNiveau={niveau}")
	public ResponseEntity<?> getByNiveau(@PathVariable("niveau") int valeur){
		HttpHeaders headers = new HttpHeaders();
		//headers.add("Access-Control-Allow-Origin", "*");
		headers.add("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT");
		headers.add("Access-Control-Allow-Headers", "X-Requested-With,content-type");
		headers.add("Access-Control-Allow-Credentials", "true");
		List<Organisme> organismes = orgService.getByNiveau(valeur);
		List<OrganismeDTO> organismesDTO = new ArrayList<>();
		for(Organisme c : organismes) {
			organismesDTO.add(c.toDTO());
		}
		return new ResponseEntity<>(organismesDTO,headers,HttpStatus.OK);
	}

}
