package com.infotel.controller;

import java.util.ArrayList;
import java.util.List;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.infotel.dto.NiveauDTO;
import com.infotel.entity.Niveau;
import com.infotel.service.NiveauService;

@CrossOrigin(origins = "http://localhost:4200")
@RestController
@RequestMapping("/api/infotel/niveau")
public class DataGetNiveauController {
	
	private final Logger log = LoggerFactory.getLogger(DataCreateController.class);
	private final NiveauService niveauService;
	
	public DataGetNiveauController(NiveauService niveauService) {
		this.niveauService=niveauService;
	}
	
	@GetMapping("/ByOrganisme")
	public ResponseEntity<?> getByOrganisme(@RequestBody String nom){
		HttpHeaders headers = new HttpHeaders();
		//headers.add("Access-Control-Allow-Origin", "*");
		headers.add("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT");
		headers.add("Access-Control-Allow-Headers", "X-Requested-With,content-type");
		headers.add("Access-Control-Allow-Credentials", "true");
		List<Niveau> niveaux = niveauService.getByOrganisme(nom);
		List<NiveauDTO> niveauxDTO = new ArrayList<>();
		for(Niveau n : niveaux) {
			niveauxDTO.add(n.toDTO());
		}
		return new ResponseEntity<>(niveauxDTO,headers,HttpStatus.OK);
	}
	
	@GetMapping("/ByValeur")
	public ResponseEntity<?> getByOrganisme(@RequestBody int valeur){
		HttpHeaders headers = new HttpHeaders();
		//headers.add("Access-Control-Allow-Origin", "*");
		headers.add("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT");
		headers.add("Access-Control-Allow-Headers", "X-Requested-With,content-type");
		headers.add("Access-Control-Allow-Credentials", "true");
		List<Niveau> niveaux = niveauService.getByValeur(valeur);
		List<NiveauDTO> niveauxDTO = new ArrayList<>();
		for(Niveau n : niveaux) {
			niveauxDTO.add(n.toDTO());
		}
		return new ResponseEntity<>(niveauxDTO,headers,HttpStatus.OK);
	}
	
	@GetMapping("/ByRessourceAndCompetence")
	public ResponseEntity<?> getByRessourceAndCompetence(@RequestBody String nom,@RequestBody String prenom,
			@RequestBody String cnom){
		HttpHeaders headers = new HttpHeaders();
		//headers.add("Access-Control-Allow-Origin", "*");
		headers.add("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT");
		headers.add("Access-Control-Allow-Headers", "X-Requested-With,content-type");
		headers.add("Access-Control-Allow-Credentials", "true");
		List<Niveau> niveaux = niveauService.getByRessourceAndCompetence(nom,prenom,cnom);
		List<NiveauDTO> niveauxDTO = new ArrayList<>();
		for(Niveau n : niveaux) {
			niveauxDTO.add(n.toDTO());
		}
		return new ResponseEntity<>(niveauxDTO,headers,HttpStatus.OK);
	}
	
	@GetMapping("/ByEquipeAndCompetence={enom}&{nom}")
	public ResponseEntity<?> getByEquipeAndCompetence(@RequestBody String nom,@RequestBody String enom){
		HttpHeaders headers = new HttpHeaders();
		//headers.add("Access-Control-Allow-Origin", "*");
		headers.add("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT");
		headers.add("Access-Control-Allow-Headers", "X-Requested-With,content-type");
		headers.add("Access-Control-Allow-Credentials", "true");
		List<Niveau> niveaux = niveauService.getByEquipeAndCompetence(nom,enom);
		List<NiveauDTO> niveauxDTO = new ArrayList<>();
		for(Niveau n : niveaux) {
			niveauxDTO.add(n.toDTO());
		}
		return new ResponseEntity<>(niveauxDTO,headers,HttpStatus.OK);
	}
}
